    // getLogo() {{{

    /**
     * Retourne le logo (sous forme base64), ou une string vide.
     *
     * @access public
     * @return string 
     */
    function getLogo() {
        $dm = $this->getDocumentModel();
        if (!$dm instanceof DocumentModel) {
            return '';
        }
        $boxCol = $this->getBoxCollection();
        $box    = $boxCol->getItem(0);
        switch($dm->getLogoType()) {
            case DocumentModel::EXPEDITOR:
                $actor = $box->getExpeditor();
                break;
            case DocumentModel::DESTINATOR: 
                $actor = $box->getDestinator();
                break;
            case DocumentModel::ONE_ACTOR: 
                $actor = $dm->getActor();
                break;
            default:
                return '';
        }
        if ($actor instanceof Actor) { 
            return $actor->getLogo();
        }
        return '';
    }

    // }}}
    // getCommandCollection() {{{

    /**
     * Retourne la collection de commandes de la packinglist.
     *
     * @access public
     * @return Collection 
     */
    function getCommandCollection() {
        $boxCol = $this->getBoxCollection();
        $cmdCol = new Collection('ProductCommand', false);
        foreach ($boxCol as $box) {
            $cmi = $box->getCommandItem();
            if ($cmi instanceof CommandItem) {
                $cmdCol->setItem($cmi->getCommand());
            }
        }
        return $cmdCol;
    }

    // }}}
