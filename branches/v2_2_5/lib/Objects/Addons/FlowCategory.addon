    // FlowCategory::getTreeItems() {{{

    /**
     * getTreeItems 
     *
     * retourne l'arbo utiliser par tigra tree menu pour représenter le treeview
     *
     * @access public
     * @return void
     */
    public function getTreeItems() {
        $return = array();
        $return[0] = $this->getName();
        $return[1] = 'dispatcher.php?entity=FlowCategory&action=edit&objID=' . $this->getId();
        $children = $this->getFlowCategoryCollection(array(), array('DisplayOrder'=>SORT_ASC));
        $index = 2;
        foreach($children as $key=>$child) {
            $return[$index] = $child->getTreeItems();
            $index++;
        }
        $children = $this->getFlowTypeCollection(array(), array('Name'=>SORT_ASC));
        foreach($children as $key=>$child) {
            $return[$index] = array(
                0 => $child->getName(),
                1 => 'dispatcher.php?entity=FlowType&action=edit&objID=' . $child->getId());
            $index++;
        }
        return $return;
    } 

    // }}}
    // FlowCategory::getCashBalance() {{{ 

    /**
     * getCashBalance 
     * 
     * @param array $params 
     * @access public
     * @return void
     */
    public function getCashBalance($params=array(), $totals=array()) {
        $return = array();
        $return[0] = $this->getName();
        $return[1] = 0;
        $return[2] = 0;
        $return[3] = array();
        $return[4] = 'FlowCategory_' . $this->getId();
        $sum = 0;
        
        // FlowType
        $filter = array();
        if(isset($params['accountingType']) && $params['accountingType']) {
            $filter['AccountingType'] = $params['accountingType'];
        }
        $flowTypes = $this->getFlowTypeCollection($filter, array('Name'=>SORT_ASC));
        foreach($flowTypes as $flowType) {
            list($result, $totals) = $flowType->getCashBalance($params, $totals);
            $return[1] += $result[1];
            $return[2] += $result[2];
            $return[3][] = $result;
        }
        // FlowCategory fille
        $children = $this->getFlowCategoryCollection(array(), array('DisplayOrder'=>SORT_ASC));
        foreach($children as $child) {
            list($result, $totals) = $child->getCashBalance($params, $totals);
            $return[1] += $result[1];
            $return[2] += $result[2];
            $return[3][] = $result;
        }
        return array($return, $totals);
    }

    // }}}

